1.位域
结构体中的冒号表示位域。
位域出现的原因是由于某些信息的存储表示只需要几个bit位就可以表示而不需要一个完整的字节，同时也是为了节省存储空间和方便处理。
其表示形式为：
struct 位域结构名
{
    类型说明符  位域名：位域长度
}

例如：
struct  bit_struct
{
    int  bit1:3;
    int  bit2:5;
    int  bit3:7;
}data;
其中bit_struct表示位域结构体，bit1、bit2、bit3表示对应的位域，data表示位域结构体定义的变量。
整个位域结构体占用2个字节，bit1占3位，bit2占5位，bit1和bit2共用一个字节，bit3占7位，独占一个字节。
struct bit_st
 {
    int a:3; //第一个字节的0~2位
    int  :0; //这里是说明的第二点，空域。下一个位域b将会从下一个字节开始，位3~7为全0。
    int b:2; //下一个字节也就是第二个字节的0~1位
    int c:5; //第二个字节紧接b之后的2~6位
    int d:2; //这里是说明的第一点，d占用第三个字节的0~1位，因为前面一个字节只剩下一位不能存放d，所以另起一个字节存放。
    int  :2; //这里说明的是第三点，d域后的两个位2~3不能使用。
    int e:3; //存放在第三个字节的第4~6位
}data, *pData;